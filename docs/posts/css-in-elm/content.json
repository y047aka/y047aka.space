{"is404":false,"staticData":{"markdown-blocks-content/posts/css-in-elm.md":"[1,[[6,[[8,\"Elm で CSS を扱う方法の検討と、\"],[2,\"https://package.elm-lang.org/packages/rtfeldman/elm-css/latest\",[0],[[8,\"elm-css\"]]],[8,\" に至るまでの記録です。\"]]],[5,[0],[[8,\"選択肢\"]]],[6,[[8,\"Elm のアプリケーションで CSS を扱うための方法にはどのようなものがあるでしょうか？\"]]],[5,[2],[[8,\"HTML で CSS ファイルを読み込む\"]]],[6,[[8,\"最もオーソドックスな方法です。\\nSass などのプリプロセッサや PostCSS などの仕組みも問題なく使うことができます。\\nただし、この方法が Elm で常に使えるわけではありません。\\nEllie などのオンラインエディタや、HTML を生成しない \"],[7,\"elm reactor\"],[8,\" などで実行する場合は CSS を読み込むことはできず、インラインに記述するなどの工夫が必要です。\"]]],[5,[2],[[8,\"CSS フレームワーク\"]]],[6,[[2,\"https://bulma.io/\",[0],[[8,\"Bulma\"]]],[8,\"、\"],[2,\"https://tailwindcss.com/\",[0],[[8,\"Tailwind CSS\"]]],[8,\"、\"],[2,\"https://semantic-ui.com/\",[0],[[8,\"Semantic UI\"]]],[8,\" などがあります。\\nこのうち Bulma については 3 ヶ月ほど使ってみました。\\n用意されているスタイルだけでは足りない場合は、自分でスタイルを書く必要があります。\"]]],[5,[2],[[8,\"elm-ui\"]]],[6,[[8,\"従来 CSS が担っていたレイアウトの定義を Elm で記述できるようにしたライブラリです。\\nレイアウト以外のスタイルは別の方法で指定する必要がありますが、使い勝手の良いライブラリとして人気を集めています。\\n（私はまだ使ったことがない）\"]]],[5,[2],[[8,\"elm-css\"]]],[6,[[8,\"私が現在使っている方法です。\\nプロパティや値が型つきで定義されていて、Elm のファイル内でスタイルを指定できます。\\nこれまで日本ではあまり注目されていませんでしたが、この記事をきっかけにして普及するといいな。\"]]],[6,[[8,\"「HTML で CSS ファイルを読み込む」と「elm-css」について、詳しく見てみましょう。\"]]],[5,[0],[[8,\"記録： HTML で CSS ファイルを読み込む\"]]],[6,[[8,\"Elm を初めてからしばらくは、使い慣れた HTML で CSS ファイルを読み込む方法を採用していました。\\n\"],[2,\"https://www.elm-live.com/\",[0],[[8,\"elm-live\"]]],[8,\" というツールが非常に便利だったため、モジュールバンドラー不要の開発を実現していました。\\n当時の私が書いていた CSS は一般的な CSS 設計とは異なるスタイルでしたが、「Elm で CSS を扱う」という目的は充分に達成していました。\"]]],[5,[2],[[8,\"elm-live のリロード機能\"]]],[6,[[8,\"elm-live の v3 系では CSS ファイルの更新を感知してブラウザをリロードする機能あり、非常に快適に開発を進めることができました。\\n4.0.0 で大きな変更がありこの機能は省略されてしまいましたが、今後復活することを期待しています。\"]]],[6,[[2,\"https://github.com/wking-io/elm-live/issues/196\",[0],[[8,\"Watching css files? · Issue #196 · wking-io/elm-live\"]]]]],[5,[2],[[8,\"別の方法を探す\"]]],[6,[[8,\"実際のところ、elm-live から CSS のライブリロード機能がなくなったことは、私が別の方法を模索するきっかけになりました。\\nCSS フレームワークの Bulma を試していたりもしましたが、ここでは省略します。\\nジンジャーさんが書かれている \"],[2,\"http://jinjor-labo.hatenablog.com/entry/2019/03/13/084116\",[0],[[8,\"CSS フレームワークを使いたくない - ジンジャー研究室\"]]],[8,\"\\nは、私の感想にかなり近いと思います。\\nとはいえ、デザインをフォーマットする手段としては有効だと感じます。\"]]],[5,[0],[[8,\"記録： elm-css\"]]],[6,[[8,\"2020 年に入り elm-css を導入しました。\\nそして、この試みは今のところ上手くいっています。\\nelm-css の特徴や使ってみての感想を以下に列挙します。\"]]],[5,[2],[[8,\"型の存在\"]]],[6,[[8,\"プロパティや値に応じた型が用意されているため、コンパイル時に記述のミスを発見することができます。\\nCSS であることに変わりはないので、詳細度やその他いくつかの問題に対しては CSS を記述する時と同じように気をつける必要があります。\"]]],[5,[2],[[8,\"locally scoped CSS\"]]],[6,[[8,\"記述したスタイルにはランダムな class 名が付与されます。\\nこれを HTML の要素と紐付けることでローカルなスコープを実現しています。\\nクラスを使ったセレクタも書けるようになっているので、ローカルなスコープ以外の方法で紐付けたい場合に使いましょう。\"]]],[5,[2],[[8,\"CSS のプロパティや値はそのまま\"]]],[6,[[8,\"過去に CSS の経験があれば、知識をそのまま活用できます。\\nすべてが網羅されているわけではありませんが、不足があれば新たに関数を作って補うことができます。\\n「CSS でできることは、elm-css でも同じようにできる」という認識で良さそうです。\"]]],[5,[2],[[8,\"動的な値を含めることができる\"]]],[6,[[8,\"数値を Elm で計算して含めることも、ロジックに応じてプロパティ単位で指定を変更することもできます。\\nなんでもできてしまうので、やりすぎに注意する必要はあるかもしれません。\"]]],[5,[2],[[8,\"関心の分離\"]]],[6,[[8,\"CSS in Elm の採用にあたって気になる部分だと思うのですが、elm-css の採用検討にあたってはそれほど重要ではないと感じています。\\n書き方の工夫で大きく変わるので、採用後に色々と検討してみると良いと思います。\\n「関心の分離」は個人的には重要なので、いつか詳しい記事を書くつもり。\"]]],[5,[2],[[8,\"コンパイルが必要\"]]],[6,[[8,\"アプリケーションが小さいうちはそれほど気になりませんが、スタイルを変更するたびにコンパイルが必要です。\\n大きくなると少しストレスに感じるかもしれません。\\nそのうち慣れます。\"]]],[5,[0],[[8,\"Q & A\"]]],[5,[2],[[8,\"学習コスト\"]]],[6,[[8,\"CSS を書けるのであれば、それほど苦労はしないと思います。\\nプロパティや値のほとんどは、スネークケースをキャメルケースにすれば使うことができます。\\nよく言われる「デザイナーとの協業」については試したことがないのでわかりません。\\nCSS in JS を採用している人に聞いてみたい。\"]]],[5,[2],[[8,\"捨てやすさ\"]]],[6,[[8,\"すべてのプロパティや値は CSS と共通なので、クラスを改めて指定する手間さえ惜しまなければ適当に変換できるはずです。\"]]],[5,[2],[[8,\"CSS に型安全は過剰？\"]]],[6,[[8,\"型安全が elm-css のすべてではないので総合的に判断すれば良いと思います。\"]]],[5,[2],[[8,\"擬似クラス、擬似要素、メディアクエリは使える？\"]]],[6,[[8,\"使えます。\"]]],[5,[2],[[8,\"PostCSS は使える？\"]]],[6,[[8,\"現行の elm-css だけでは PostCSS は使えません。\\n必要な機能は関数として作ってしまえば、それほど困ることはないのかなと考えています。\"]]],[5,[2],[[8,\"リセット CSS がほしい\"]]],[6,[[2,\"https://package.elm-lang.org/packages/y047aka/elm-reset-css/latest/\",[0],[[8,\"y047aka/elm-reset-css\"]]],[8,\" を作りました。\"]]],[5,[2],[[8,\"elm-css を既存の CSS と組み合わせたい\"]]],[6,[[8,\"HTML ファイルで既存の CSS を読み込みつつ、適宜 elm-css の指定を追加できます。\\n既存の CSS から elm-css へと段階的な移行もできますね。\"]]],[5,[2],[[8,\"CSS ファイルを生成したい\"]]],[6,[[8,\"過去に \"],[2,\"https://github.com/tcoopman/elm-css-webpack-loader\",[0],[[8,\"elm-css-webpack-loader\"]]],[8,\" や \"],[2,\"https://package.elm-lang.org/packages/ThinkAlexandria/css-in-elm/latest/\",[0],[[8,\"ThinkAlexandria/css-in-elm\"]]],[8,\" が開発されていたので、参考にすると良さそうです。\\n私は今のところ試していません。\"]]],[5,[0],[[8,\"参考\"]]],[6,[[8,\"elm-css を採用している事例の紹介です。\"]]],[5,[2],[[8,\"noredink-ui\"]]],[6,[[8,\"NoRedInk 社製の UI ウィジェット集です。\\n実践的な使い方はこのパッケージの実装を参考にするのが良いかも。\\n\"],[2,\"https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/\",[0],[[8,\"NoRedInk/noredink-ui\"]]]]],[5,[2],[[8,\"elm-css patterns\"]]],[6,[[8,\"elm-css のレイアウトパターン集です。\\n綺麗にまとまっているので、elm-ui との比較検討をする場合に役立ちそう。\\n\"],[2,\"https://elmcsspatterns.io/\",[0],[[8,\"elm-css patterns\"]]]]],[5,[0],[[8,\"今後の展望\"]]],[6,[[8,\"いま試しているものや、未来の可能性など。\"]]],[5,[2],[[8,\"Palette の導入\"]]],[6,[[8,\"CSS で最も難しいことのひとつが色の管理です。\\n変数を活用する方法は既存の CSS でも普及していますが、私は background / color / border などをセットにした Palette という単位を試しています。\\n今のところ上手く機能しているので、elm-css を使う利点の 1 つとして考えています。\\n\"],[2,\"https://github.com/y047aka/y047aka.space/blob/master/src/Color/Palette.elm\",[0],[[8,\"https://github.com/y047aka/y047aka.space/blob/master/src/Color/Palette.elm\"]]]]],[5,[2],[[8,\"elm-ui との関係性\"]]],[6,[[8,\"レイアウトに関するスタイルのみを CSS から切り離すことへの違和感が強く、私自身は \"],[2,\"https://package.elm-lang.org/packages/mdgriffith/elm-ui/latest/\",[0],[[8,\"elm-ui\"]]],[8,\" を使ったことがありませんでした。\\nelm-css を深めていく中で、いまは elm-ui の手法を一部取り入れる可能性もあると考えています。\"]]],[5,[2],[[8,\"CSS への期待\"]]],[6,[[8,\"elm-css を導入した背景には、CSS 設計（BEM など）への反発もありました。\\n従来の CSS 設計とは異なる新しいパラダイムの登場や CSS 自体のさらなる進化を期待しています。\"]]]]]","{\"method\":\"GET\",\"url\":\"file://content/posts/css-in-elm.md\",\"headers\":[],\"body\":{\"type\":\"empty\"}}":"{\"parsedFrontmatter\":{\"title\":\"Elm + CSS の検討と実践記録\",\"description\":\"\",\"published\":\"2020-05-16\"}}"}}